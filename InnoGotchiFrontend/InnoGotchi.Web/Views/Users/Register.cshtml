@model IEnumerable<string>?;
<form asp-action="Create" asp-controller="Users" method="post" enctype="multipart/form-data" id="register_form" onsubmit="return isValidForm()">
    <h3>Registration form</h3>
    <div class="form-floating mb-3">
        <input class="form-control" id="firstname_input" type="text" name="FirstName" placeholder="firstname" required/>
        <label for="firstname_input">First name</label>
    </div>
    <div class="form-floating mb-3">
        <input id="lastname_input" class="form-control" type="text" name="LastName" placeholder="secondname" required />
        <label for="lastname_input">Last name</label>
    </div>
    <div class="form-floating mb-3">
        <input id="email_input" class="form-control" type="email" name="Email" placeholder="name@example.com" required />
        <label for="email_input">Email</label>
        <div id="error_message" class="text-danger h6" style="display:none">There is a user with such email</div>
    </div>
    <div class="form-floating mb-3">
        <input id="password_input" class="form-control" type="password" name="Password" placeholder="SomePassword1234_" required />
        <label for="password_input">Password</label>
    </div>
    <div id="imageSelector" class="row mb-3">
        <div class="col">
            <label for="formFile" class="form-label">Choose image for avatar (jpg, png)</label>
            <input type="file" name="FormFile" accept=".jpg, .png, .jpeg" class="form-control" id="formFile" required>
        </div>
        <div id="imageHolder" class="col">
            <img id="avatar" class="img-thumbnail" width="100" height="100" style="opacity:0;vertical-align:central;"/>
        </div>
    </div>
    
    <input class="btn btn-outline-dark" type="submit" value="Register"/>
</form>


<script>
    var emails = [];
    var isEmailValid = false;
    @if (Model != null)
    {
        @foreach (var email in Model)
        {
            @:emails.push('@email');
        }
    }
    console.log(emails);
    var register_form = document.getElementById('register_form');
    register_form.onsubmit = function(){
        return isValidForm();
    }

    var email_input = document.getElementById('email_input');
    email_input.addEventListener('keyup', validateEmail);
    email_input.addEventListener('change', validateEmail);

    function validateEmail(){
        let email = email_input.value;
        error_message.style.display = 'block';
        if(!emails.includes(email)){
            error_message.innerHTML = 'This email is available :)';
            if(error_message.classList.contains('text-danger')){
                error_message.classList.remove('text-danger');
            }

            if(!error_message.classList.contains('text-success')){
                error_message.classList.add('text-success');
            }

            isEmailValid = true;
        }
        else{
            error_message.innerHTML = 'This email is already in use :(';
            if(!error_message.classList.contains('text-danger')){
                error_message.classList.add('text-danger');
            }

            if(error_message.classList.contains('text-success')){
                error_message.classList.remove('text-success');
            }

            isEmailValid = false;
        }
    }

    function isValidForm(){
        return isEmailValid;
    }

    var input = document.getElementById('formFile');
    input.addEventListener('change', updateImageDisplay);

    function updateImageDisplay() {

        var imageSelector = document.getElementById('imageSelector');
        var image = document.getElementById('avatar')

        while (input.firstChild) {
            console.log(input.firstChild)
            input.removeChild(input.firstChild);
        }
        var curFiles = input.files;
        if (curFiles.length === 0) {
            image.style.opacity = 0;
        }
        else {
            for (var i = 0; i < curFiles.length; i++) {
                var para = document.createElement('p');
                if (validFileType(curFiles[i])) {
                    para.textContent = 'File name ' + curFiles[i].name + ', file size ' + returnFileSize(curFiles[i].size) + '.';
                    image.style.opacity = 1;

                    image.src = window.URL.createObjectURL(curFiles[i]);
                } else {
                    para.textContent = 'File name ' + curFiles[i].name + ': Not a valid file type. Update your selection.';
                    imageSelector.appendChild(para);
                }
            }
        }

    }

    var fileTypes = [
        'image/jpeg',
        'image/pjpeg',
        'image/png'
    ]

    function validFileType(file) {
        for (var i = 0; i < fileTypes.length; i++) {
            if (file.type === fileTypes[i]) {
                return true;
            }
        }

        return false;
    }

    function returnFileSize(number) {
        if (number < 1024) {
            return number + 'bytes';
        } else if (number > 1024 && number < 1048576) {
            return (number / 1024).toFixed(1) + 'KB';
        } else if (number > 1048576) {
            return (number / 1048576).toFixed(1) + 'MB';
        }
    }

</script>
